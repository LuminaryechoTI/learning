JavaScript Array Methods

1. push(): Adds one or more elements to the end of an array.

let myArray = [1, 2, 3];
myArray.push(4, 5);
console.log(myArray); // Output: [1, 2, 3, 4, 5]
2. pop(): Removes the last element from an array and returns it.

let myArray = [1, 2, 3];
let lastElement = myArray.pop();
console.log(lastElement); // Output: 3
console.log(myArray); // Output: [1, 2]
3. shift(): Removes the first element from an array and returns it.

let myArray = [1, 2, 3];
let firstElement = myArray.shift();
console.log(firstElement); // Output: 1
console.log(myArray); // Output: [2, 3]
4. unshift(): Adds one or more elements to the beginning of an array.

let myArray = [1, 2, 3];
myArray.unshift(0, -1);
console.log(myArray); // Output: [-1, 0, 1, 2, 3]
5. splice(): Adds or removes elements from an array at a specified position.

let myArray = [1, 2, 3, 4, 5];
myArray.splice(2, 1, 'a', 'b');
console.log(myArray); // Output: [1, 2, 'a', 'b', 4, 5]
6. slice(): Returns a shallow copy of a portion of an array.

let myArray = [1, 2, 3, 4, 5];
let slicedArray = myArray.slice(1, 3);
console.log(slicedArray); // Output: [2, 3]
7. indexOf(): Returns the index of the first occurrence of a specified element in an array.

let myArray = [1, 2, 3, 4, 5];
let index = myArray.indexOf(3);
console.log(index); // Output: 2
8. lastIndexOf(): Returns the index of the last occurrence of a specified element in an array.

let myArray = [1, 2, 3, 4, 5];
let index = myArray.lastIndexOf(3);
console.log(index); // Output: 2
9. includes(): Returns a boolean indicating whether an array includes a specified element.

let myArray = [1, 2, 3, 4, 5];
let includes = myArray.includes(3);
console.log(includes); // Output: true
10. forEach(): Executes a provided function once for each array element.

let myArray = [1, 2, 3, 4, 5];
myArray.forEach(element => console.log(element));
11. map(): Creates a new array with the results of applying a provided function to each array element.

let myArray = [1, 2, 3, 4, 5];
let mappedArray = myArray.map(element => element * 2);
console.log(mappedArray); // Output: [2, 4, 6, 8, 10]
12. filter(): Creates a new array with all elements that pass the test implemented by a provided function.

let myArray = [1, 2, 3, 4, 5];
let filteredArray = myArray.filter(element => element > 3);
console.log(filteredArray); // Output: [4, 5]
13. reduce(): Reduces an array to a single value by applying a provided function to each element.

let myArray = [1, 2, 3, 4, 5];
let sum = myArray.reduce((acc, current) => acc + current, 0);
console.log(sum); // Output: 15
14. every(): Returns a boolean indicating whether all elements in an array satisfy a provided testing function.

let myArray = [1, 2, 3, 4, 5];
let every = myArray.every(element => element > 0);
console.log(every); // Output: true
15. some(): Returns a boolean indicating whether at least one element in an array satisfies a provided testing function.

let myArray = [1, 2, 3, 4
